{"version":3,"sources":["webpack:///./src/pages/posts/2021/2021-01-13-second-post/index.mdx","webpack:///./src/templates/blog-post.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","children","pageContext","className","frontmatter","title","date","substring"],"mappings":"2OAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,uCACA,yMAAsL,yBAAtL,iKAA8V,yBAA9V,4NACA,uBAAG,mCAAKC,WAAW,KAAQ,CACvB,IAAO,6DACP,IAAO,UAFX,KAIA,8NAKJJ,EAAWK,gBAAiB,G,kCC/B5B,2DAOe,gBAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAEnB,OACI,kBAAC,IAAD,KACI,yBAAKC,UAAU,eACX,wBAAIA,UAAU,cAAcD,EAAYE,YAAYC,OACpD,wBAAIF,UAAU,aAAaD,EAAYE,YAAYE,KAAKC,UAAU,EAAG,MAExEN","file":"component---src-pages-posts-2021-2021-01-13-second-post-index-mdx-5f547642238587937cb4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/moniq/Projects/GatsbyBlog/Personal-Code-Blog/src/templates/blog-post.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3>{`Second Post`}</h3>\n    <p>{`For now I have the timer working on the pomodoro app. I am using setInterval() and setting the state to decrease the minutes which will wait for 6000ms and seconds by 1000ms. `}<br />{`I don't know if that is the best approach for this but I can refactor later. I'm also trying to figure out the best way to structure my files and components. `}<br />{`This simple little app is basically a timer and todo app. I hope that I can improve the UI and learn better styling practices in the process, the colors I chose was for accessibility I might change them again later. `}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://media.giphy.com/media/qIly1RGRPBZfpb4xeg/giphy.gif\",\n        \"alt\": \"pom1\"\n      }}></img>{` `}</p>\n    <p>{`One new thing I learned today was how to use setInterval() and how to use clearInterval() in componentWillUnmount(). I'm getting a better hang of lifecycle methods but need to get better at it. `}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\r\nimport { graphql, Link } from 'gatsby'\r\n// import { MDXRenderer } from 'gatsby-plugin-mdx';\r\nimport \"../stylesheets/layoutstyles.css\"\r\nimport Layout from '../layouts/index'\r\n\r\n\r\nexport default ({children, pageContext}) => {\r\n\r\n        return (\r\n            <Layout>\r\n                <div className=\"post-header\">\r\n                    <h2 className=\"post-title\">{pageContext.frontmatter.title}</h2>\r\n                    <h4 className=\"post-date\">{pageContext.frontmatter.date.substring(0, 10)}</h4>\r\n                </div>\r\n                {children}\r\n            </Layout>\r\n        )\r\n    \r\n\r\n}\r\n\r\n\r\nexport const query = graphql\r\n    `\r\n    query PostsBySlug($slug: String!) {\r\n        mdx( fields: { slug: { eq: $slug } }\r\n        ){\r\n            body\r\n            frontmatter {\r\n                title\r\n                date(formatString: \"YYYY MMMM Do\")\r\n            }\r\n        }\r\n    }\r\n`\r\n"],"sourceRoot":""}