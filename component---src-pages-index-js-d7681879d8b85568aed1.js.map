{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["query","HomePage","data","site","siteMetadata","title","description","allMdx","nodes","map","excerpt","frontmatter","date"],"mappings":"2FAAA,6DAGaA,EAAK,aA8CHC,UArBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OACI,2BACI,2BACI,0BAAKA,EAAKC,KAAKC,aAAaC,OAC5B,yBAAIH,EAAKC,KAAKC,aAAaE,cAG/B,2BACKJ,EAAKK,OAAOC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,YAAZ,OACnB,gCACI,0BAAKA,EAAYN,OACjB,yBAAIM,EAAYC,MAChB,yBAAIF","file":"component---src-pages-index-js-d7681879d8b85568aed1.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nexport const query = graphql\n`\n    query SITE_INDEX_QUERY {\n        site {\n            siteMetadata {\n                title\n                description\n            }\n        }\n        allMdx(\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter: { frontmatter: { published: { eq: true } } }\n        ) {\n            nodes {\n                id\n                excerpt(pruneLength: 250)\n                frontmatter {\n                    title\n                    date\n                }\n            }\n        }\n    }\n`\n\nconst HomePage = ({ data }) => {\n    return (\n        <div>\n            <div>\n                <h1>{data.site.siteMetadata.title}</h1>\n                <p>{data.site.siteMetadata.description}</p>\n            </div>\n\n            <div>\n                {data.allMdx.nodes.map(({ excerpt, frontmatter }) => (\n                    <>\n                        <h1>{frontmatter.title}</h1>\n                        <p>{frontmatter.date}</p>\n                        <p>{excerpt}</p>\n                    </>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default HomePage"],"sourceRoot":""}