{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Monique's Code Blog","description":null}},"allMdx":{"nodes":[{"id":"cdfabd68-57db-5971-b8e8-871d822fe620","excerpt":"Slow day today, but I push onwards! I worked on adding prismjs to this blog to be able to add code snippets and also added gatsby-remark-images to add images and gifs.  Slow day today but will work more on the Pomodoro app tomorrow, I want to finish…","frontmatter":{"title":"Day 4","date":"2021-01-15T00:00:00.000Z"},"fields":{"slug":"/posts/2021/2021-01-15-fourth-post/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Day 4\",\n  \"date\": \"2021-01-15T00:00:00.000Z\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Slow day today, but I push onwards!\"), mdx(\"p\", null, \"I worked on adding prismjs to this blog to be able to add code snippets and also added gatsby-remark-images to add images and gifs.\", mdx(\"br\", null), \" Slow day today but will work more on the Pomodoro app tomorrow, I want to finish the controls where you can play, pause and stop the timer.\", mdx(\"br\", null), \"\\nIf I can get that working I will just have the todo part and that should be easy enough to try to work on another project, maybe another frontend mentor one?\"), mdx(\"p\", null, \"Helpful guides I found for gatsby syntax highlighting:\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://dev.to/fidelve/the-definitive-guide-for-using-prismjs-in-gatsby-4708\"\n  }), \"https://dev.to/fidelve/the-definitive-guide-for-using-prismjs-in-gatsby-4708\")));\n}\n;\nMDXContent.isMDXComponent = true;"},{"id":"bcddf6b6-12ba-5999-a174-5db93e1447dc","excerpt":"I worked on my Pomodoro app and I worked on this  leetcode problem  The thing I learned new today was how to use componentDidUpdate() to get the previous props and previous state in a component to get the time from my Timer.js component to App.js so…","frontmatter":{"title":"Day 3","date":"2021-01-14T00:00:00.000Z"},"fields":{"slug":"/posts/2021/2021-01-14-third-post/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Day 3\",\n  \"date\": \"2021-01-14T00:00:00.000Z\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I worked on my Pomodoro app and I worked on this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leetcode.com/problems/merge-two-sorted-lists/\"\n  }), \"leetcode problem\"), mdx(\"br\", null), \" The thing I learned new today was how to use componentDidUpdate() to get the previous props and previous state in a component to get the time from my Timer.js component to App.js so that I can pass the time to other components in my app. \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"    When highlight.js or prism.js works ill add my code here lol \\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},{"id":"bb4d203a-41f4-513b-a414-bc0ea00e5811","excerpt":"Second Post For now I have the timer working on the pomodoro app. I am using setInterval() and setting the state to decrease the minutes which will wait for 6000ms and seconds by 1000ms.  I don't know if that is the best approach for this but I can…","frontmatter":{"title":"Day 2","date":"2021-01-13T00:00:00.000Z"},"fields":{"slug":"/posts/2021/2021-01-13-second-post/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Day 2\",\n  \"date\": \"2021-01-13T00:00:00.000Z\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Second Post\"), mdx(\"p\", null, \"For now I have the timer working on the pomodoro app. I am using setInterval() and setting the state to decrease the minutes which will wait for 6000ms and seconds by 1000ms. \", mdx(\"br\", null), \"I don't know if that is the best approach for this but I can refactor later. I'm also trying to figure out the best way to structure my files and components. \", mdx(\"br\", null), \"This simple little app is basically a timer and todo app. I hope that I can improve the UI and learn better styling practices in the process, the colors I chose was for accessibility I might change them again later. \"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://media.giphy.com/media/qIly1RGRPBZfpb4xeg/giphy.gif\",\n    \"alt\": \"pom1\"\n  })), \" \"), mdx(\"p\", null, \"One new thing I learned today was how to use setInterval() and how to use clearInterval() in componentWillUnmount(). I'm getting a better hang of lifecycle methods but need to get better at it. \"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"id":"80afdb58-85a5-5c44-8a22-d8c7d90fb794","excerpt":"First Post! Projects I have in progress:  Pomodoro App  (idea from Florin Pop's  App Ideas ) Covid Map Project Mood App Today I worked on my Pomodoro App and 1 code question.  Code problem from LeetCode, linking my repo  here","frontmatter":{"title":"Day 1","date":"2021-01-12T00:00:00.000Z"},"fields":{"slug":"/posts/2021/2021-01-12-first-post/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Day 1\",\n  \"date\": \"2021-01-12T00:00:00.000Z\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"First Post!\"), mdx(\"p\", null, \"Projects I have in progress: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/mon33k/Pomodoro-App\"\n  }), \"Pomodoro App\"), \" (idea from Florin Pop's \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/florinpop17/app-ideas\"\n  }), \"App Ideas\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Covid Map Project\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mood App\")), mdx(\"p\", null, \"Today I worked on my Pomodoro App and 1 code question. \"), mdx(\"p\", null, \"Code problem from LeetCode, linking my repo \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/mon33k/Coding-Challenges/blob/master/LeetCode/TwoSum.js\"\n  }), \"here\")));\n}\n;\nMDXContent.isMDXComponent = true;"}]}},"pageContext":{}},"staticQueryHashes":["1523939174"]}